{
  "---HEADER---": "",
  "home": "Home",
  "about": "About",
  "certif": "Certifications",
  "skls": "Skills",
  "proy": "Projects",
  "experiences": "Experience",
  "contact": "Contact",
  "education": "Education",

  "---FOOTER---": "",
  "footerdesc": "Passionate about creating projects and bringing ideas to life with code",
  "footerwork": "Available for work",
  "footerprogr": "Engineer in progress",
  "footercopyr": "All rights reserved.",
  "footerlocation": "Based in Ecuador",

  "---HOME---": "",
  "welcome": "Welcome to my Portfolio",
  "welcome2": "Hello, I'm",
  "subtitle": "Full Stack Junior Developer",
  "mycv": "My Resume",

  "---SKILL---": "",
  "projectsProfessional": "Professional projects",
  "projectsAcademic": "Academic experience",

  "---ABOUT---": "",
  "about.imageAlt": "Kevin's photo",
  "aboutrole": "Full Stack Developer",
  "aboutshort": "Developer passionate about transforming problems into solutions with code. Full-stack experience and production deployments.",
  "about.stat1title": "Projects in production",
  "about.stat1value": "1 (ISP)",
  "about.stat2title": "Preferred stack",
  "about.stat2value": "React • Node.js",
  "about.philosophyTitle": "My philosophy",
  "about.philosophy": "Programming is about solving problems with logic, writing clear code and continuously improving processes.",
  "about.title": "My Professional History",
  "about.leadin": "From desktop Java to web deployments in production — a path of learning and practice.",
  "about.t1date": "University",
  "about.t1title": "Start — Java / Eclipse",
  "about.t1desc": "First semesters learning Java in Eclipse; programming foundations and OOP paradigms.",
  "about.t2date": "Projects",
  "about.t2title": "Desktop → C# / Visual Studio",
  "about.t2desc": "Desktop application development, version control and best practices.",
  "about.t3date": "Web",
  "about.t3title": "Web — Angular, Node.js, React",
  "about.t3desc": "I specialized in web development, APIs and server deployments.",
  "about.t4date": "Production",
  "about.t4title": "ISP System — Billing and Deploy",
  "about.t4desc": "Participated in a management system for ISP: electronic billing, service mapping and production deployment.",
  "about.diffTitle1": "Fast learning",
  "about.diff1": "Self-taught: I research and master new libraries quickly.",
  "about.diffTitle2": "Full-stack vision",
  "about.diff2": "I understand from infrastructure to interface: networks, hardware and connected software.",
  "about.longTitle": "Full version",
  "about.collapse": "Close",
  "about.expand": "Read more",
  "about.long1": "I am a student/graduate of Information Technology Engineering specialized in software development. My journey started with Java and desktop development (Eclipse, NetBeans, Visual Studio/C#) and evolved towards web development (Angular, Node.js, React).",
  "about.long2": "I am passionate about solving problems through programming: I design clear solutions, optimize processes and automate tasks that improve operations. I stand out for quickly learning new technologies, my attention to detail and combining software and network knowledge to deliver complete solutions.",
  "about.long3": "Outside of work I consider myself a calm and collaborative person; I enjoy sharing with friends and continuing to train in programming through personal projects and tutorials.",

  "education.title": "Education",
  "education.lead": "My academic journey and continuous professional development.",
  "education.university.dates": "Nov 2021 — May 2026 (est.)",
  "education.university.degree": "Information Technology Engineering",
  "education.university.description": "University education focused on software development, databases, networks, cybersecurity and IoT.",
  "education.skills.software": "Software Development",
  "education.skills.databases": "Databases",
  "education.skills.networks": "Networks",
  "education.progress.completed": "completed",
  "education.highschool.dates": "2016 — 2021",
  "education.highschool.degree": "Bachelor of Science",
  "education.highschool.description": "Secondary education with specialization in science.",
  "education.progress.finished": "Completed",

  "experience": {
    "title": "Work Experience",
    "lead": "Professional background in real projects, support and deployments.",
    "viewMore": "View more",
    "viewLess": "View less",
    "viewMoreExperiences": "View more experiences",
    "demo": "Demo",
    "viewDemo": "View demo",
    "close": "Close",
    "etyrse": {
      "role": "Full Stack Developer",
      "location": "Machala, Ecuador",
      "period": "May 2024 — Aug 2024",
      "short": "Comprehensive system for ISPs: electronic billing, customer mapping and admin panel.",
      "bullets": [
        "Integration with SRI for invoices.",
        "Interactive mapping with Leaflet.",
        "Microservices architecture with Docker."
      ],
      "allBullets": [
        "Integration with SRI.",
        "Employee registration with Cloudinary.",
        "Leaflet for geolocation.",
        "Dockerized microservices + API Gateway.",
        "JWT authentication, optimized PostgreSQL.",
        "Deployments: Vercel, Railway, Supabase, cPanel."
      ]
    },
    "gadm": {
      "company": "GAD Machala",
      "role": "Intern — Networks & Support",
      "location": "Machala, Ecuador",
      "period": "Apr 2024 — Jun 2024",
      "short": "Equipment maintenance and network infrastructure deployment in municipal offices.",
      "bullets": [
        "Network infrastructure for biometrics.",
        "Maintenance and optimization of equipment.",
        "Credentials and serials documentation."
      ],
      "allBullets": [
        "Installation of biometric network systems.",
        "Technical support and incident resolution.",
        "Detailed inventory and documentation."
      ]
    },
    "mae1": {
      "company": "Regional Directorate 7 Loja of the Ministry of Environment, Water and Ecological Transition",
      "role": "Intern — IT",
      "location": "Machala, Ecuador",
      "period": "Oct 2024 — Jan 2025",
      "short": "Network infrastructure and web app development for network mapping with MikroTik.",
      "bullets": [
        "Rack switch + UTP CAT6 cabling.",
        "Web app for network mapping.",
        "Visualization of nodes and statuses."
      ],
      "allBullets": [
        "Installation of switch and UTP CAT6 cabling.",
        "Web application with MikroTik.",
        "Improved IT management."
      ]
    },
    "mae2": {
      "company": "Regional Directorate 7 Loja of the Ministry of Environment, Water and Ecological Transition",
      "role": "Intern — IT",
      "location": "Machala, Ecuador",
      "period": "Apr 2025 — Jul 2025",
      "short": "Windows installation and configuration with Active Directory and security deployments.",
      "bullets": [
        "Windows 10/11 installation.",
        "Integration with Active Directory and VAMT.",
        "WSUS implementation."
      ],
      "allBullets": [
        "Configuration of +15 devices.",
        "License activation with VAMT.",
        "WSUS for security.",
        "Digital signature.",
        "Windows vs Linux comparison."
      ]
    }
  },

  "projects": {
    "title": "Featured Projects",
    "subtitle": "Some of my recent work where I apply my knowledge in web development.",
    "icontrol": {
      "title": "iControl - ISP Network Management System",
      "shortDescription": "Full-stack application for managing customers, services, and network in an ISP, with microservices and interactive maps.",
      "fullDescription": "iControl is a system developed for Internet Service Providers (ISPs) that enables full management of customers, contracts, billing, incidents, and network infrastructure monitoring. It features a frontend built with React + TypeScript and a backend based on Node.js with a microservices architecture, integrating PostgreSQL, Redis, and BullMQ for queue management. It includes interactive maps with Leaflet to locate clients and nodes, image storage with Cloudinary, and secure authentication with JWT. Deployment with Docker ensures scalability and modularity.",
      "problem": "Local ISPs need a centralized system to manage customers, services, and network operations, avoiding manual processes and ensuring traceability of information.",
      "solution": "A modular full-stack platform was developed with microservices, an interactive frontend, and dynamic maps. The backend handles billing, contracts, and monitoring with persistence in PostgreSQL and Redis. The frontend allows administrators to visualize clients, contracted services, and network topology on maps, ensuring scalability with Docker-based deployment.",
      "features": {
        "1": "Customer management (registration, updates, contract history)",
        "2": "Administration of Internet services and plans",
        "3": "Billing system with payment control",
        "4": "Interactive maps to locate clients, nodes, and connections",
        "5": "Incident management and support reporting",
        "6": "Task queues and notifications with BullMQ + Redis",
        "7": "Secure authentication with JWT and user roles",
        "8": "Cloud storage integration (Cloudinary)"
      },
      "challenges": {
        "1": "Designing a scalable microservices architecture",
        "2": "Integrating interactive maps with Leaflet and dynamic data",
        "3": "Optimizing queue management with Redis and BullMQ",
        "4": "Ensuring data consistency across microservices",
        "5": "Implementing security with JWT and access roles"
      },
      "achievements": {
        "1": "Functional full-stack platform deployed in production",
        "2": "Operational system for customer, billing, and network management",
        "3": "Network topology visualized on interactive maps",
        "4": "Modular architecture ready to scale with Docker",
        "5": "Code published on GitHub as project evidence"
      }
    },
    "vetclinic": {
      "title": "VetClinic - Veterinary Management System",
      "shortDescription": "Desktop application in C# (.NET + WinForms) for veterinary clinic management, with SQL Server database.",
      "fullDescription": "A desktop system developed in C# with .NET Framework and WinForms that allows managing a veterinary clinic. It includes modules for client registration, pets, medical history, appointments, treatments, and billing. The database is built in SQL Server, using SQL queries, stored procedures, LINQ, and ADO.NET, applying object-oriented programming principles.",
      "problem": "Small and medium-sized veterinary clinics lack a centralized digital system to manage patients, doctors, and treatments, which results in inefficient manual processes.",
      "solution": "A robust desktop application was implemented to centralize the management of clients, pets, and services. It includes full CRUD, medical history and appointment control, as well as administrative reports, ensuring data persistence in SQL Server.",
      "features": {
        "1": "CRUD for clients and pets",
        "2": "Medical history and consultation management",
        "3": "Appointment and treatment scheduling",
        "4": "Billing and payment module",
        "5": "User authentication and management",
        "6": "Patient reports and statistics",
        "7": "User-friendly WinForms interface with validations"
      },
      "challenges": {
        "1": "Designing an efficient relational schema in SQL Server",
        "2": "Implementing stored procedures for CRUD operations",
        "3": "Ensuring data integrity between clients, pets, and treatments",
        "4": "Optimizing queries with LINQ and ADO.NET",
        "5": "Applying OOP principles in the system architecture"
      },
      "achievements": {
        "1": "Functional system delivered as a university project",
        "2": "Complete management of clients, pets, and services implemented",
        "3": "Effective use of SQL Server with stored procedures and queries",
        "4": "Modular and maintainable architecture in C#",
        "5": "Code published on GitHub as project evidence"
      }
    },
    "biblio": {
      "title": "Bibliographic Management System - UTMACH",
      "shortDescription": "System to organize and manage academic references of researchers at the Technical University of Machala.",
      "fullDescription": "A bibliographic management system that allows organizing, registering, and consulting academic publications. It facilitates the management of researchers, scientific articles, and their association with different types of publications such as journals, technical reports, or conference proceedings. Includes complete CRUDs and the use of stored procedures in SQL Server.",
      "problem": "The manual management of academic references was inefficient, making it difficult to organize researchers and their publications across different media.",
      "solution": "A bibliographic management system was implemented to centralize the handling of researchers, scientific articles, and publications, with optimized queries and stored procedures in SQL Server.",
      "features": {
        "1": "Management of researchers and their publications",
        "2": "Full CRUD for scientific articles",
        "3": "Support for journals, technical reports, and conference proceedings",
        "4": "Entity-relationship model for data organization"
      },
      "challenges": {
        "1": "Design of a scalable ER model",
        "2": "Optimization of stored procedures",
        "3": "Ensuring consistency in relationships between researchers and publications"
      },
      "achievements": {
        "1": "Standardization of academic publication registration",
        "2": "Faster access to references",
        "3": "Solid foundation for future research projects at the university"
      },
      "technologies": {
        "storedProcedures": "Stored Procedures",
        "erModeling": "ER Modeling"
      }
    },
    "email": {
      "title": "Email Classifier - Spam & Phishing Detection",
      "shortDescription": "Predictive model based on Machine Learning to automatically identify malicious emails (spam and phishing).",
      "fullDescription": "Project developed in the Business Intelligence course with the aim of applying Machine Learning techniques for malicious email detection. A dataset of more than 16,000 emails was used, applying text preprocessing (CountVectorizer with Bag of Words) and training multiple classifiers: Multinomial and Bernoulli Naive Bayes, SVC, Random Forest, MLP Classifier, Logistic Regression, XGBoost, and K-Nearest Neighbors. Models were evaluated with key metrics such as Accuracy, Precision, Recall, F1-score, ROC-AUC, and Precision-Recall curves. The best results were achieved with XGBoost and Random Forest, highlighting the effectiveness of ensemble methods. The project demonstrated the applicability of ML in cybersecurity to strengthen spam and phishing detection.",
      "problem": "The increase in fraudulent emails such as spam and phishing represents a significant threat to users and companies, making manual detection difficult.",
      "solution": "Development of an automatic classification system using multiple Machine Learning models, evaluated with advanced metrics to ensure accuracy in malicious email detection.",
      "features": {
        "1": "Data preprocessing with CountVectorizer (Bag of Words)",
        "2": "Training with multiple classifiers (Naive Bayes, Random Forest, XGBoost, SVC, among others)",
        "3": "Evaluation with metrics Accuracy, Precision, Recall, F1-score, ROC-AUC",
        "4": "Visualization of results with heatmaps and performance curves"
      },
      "challenges": {
        "1": "Handling class imbalance in the dataset",
        "2": "Hyperparameter optimization for multiple models",
        "3": "Objective comparison between different classifiers"
      },
      "achievements": {
        "1": "XGBoost and Random Forest models achieved the highest accuracy",
        "2": "Implementation of a complete preprocessing and evaluation pipeline",
        "3": "Successful demonstration of ML usefulness in cybersecurity"
      }
    },
    "shoemarket": {
      "title": "Shoe Market - Virtual Footwear Store",
      "shortDescription": "Online footwear store with catalog, cart, inventory management, and sales reports (frontend in Vite + backend in Node.js/TypeScript).",
      "fullDescription": "A complete simulation of a virtual footwear store. It allows user registration and login, CRUD for products and clients, shopping cart with stock control and seasonal discounts, purchase process (simulated/integrable with gateway), invoice generation, and analytical reports (seasonal sales, frequent customers, abandoned carts). Frontend with Vite + React + TypeScript + Tailwind; backend with Node.js + TypeScript using Sequelize and PostgreSQL.",
      "problem": "Need for a platform to simulate the entire sales cycle of a store (customer management, inventory control, cart, billing, and sales analysis), ensuring stock consistency and enabling business reporting.",
      "solution": "Implementation of a full-stack application: interactive frontend with Vite/React for customer experience and admin panel; REST backend with Node.js/TypeScript and Sequelize managing transactions, updating stock atomically, and exposing reporting endpoints. Business validations were added (no selling more than available, low-stock alerts, seasonal discounts) and detailed invoice generation after purchase.",
      "features": {
        "1": "Product CRUD (code, name, category, price, stock, season, automatic seasonal discount)",
        "2": "Client CRUD and user management (roles: admin / client)",
        "3": "Public catalog page with search and filters; only authenticated users can add to cart",
        "4": "Shopping cart: add, modify quantities, remove; locked when exceeding available stock",
        "5": "Total calculation with taxes and discounts; purchase confirmation deducts stock and generates invoice",
        "6": "Low stock alerts (configurable range) and 'out of stock' status when stock reaches 0",
        "7": "Reports and dashboard (seasonal income, unsold products, frequent customers, abandoned carts) using chart libraries",
        "8": "Authentication with JWT and protected routes for the admin panel"
      },
      "challenges": {
        "1": "Maintaining stock consistency in concurrent sales (transactions and DB control)",
        "2": "Design of relational schema and procedures for efficient reporting",
        "3": "Correct calculation of seasonal discounts and tax application",
        "4": "Generation of detailed invoices and sales traceability",
        "5": "Integration/simulation of payment gateway and handling of payment states"
      },
      "achievements": {
        "1": "Functional full-stack application delivered as exam (complete frontend and backend)",
        "2": "Inventory system with stock control and alerts implemented",
        "3": "Analytical reports enabling identification of seasonal income and abandoned carts",
        "4": "Architecture ready to scale (Sequelize + PostgreSQL, well-defined REST endpoints)",
        "5": "Code published on GitHub as project evidence"
      }
    }
  }
}
